Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">CocktailApp</string>\n    <string name=\"home\">Home</string>\n    <string name=\"favorites\">Favorites</string>\n    <!-- TODO: Remove or change this placeholder text -->\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\n    <string name=\"cocktailimage\">cocktailImage</string>\n    <string name=\"tequila\">Tequila</string>\n    <string name=\"tequila_blanco_cristalino\">Tequila blanco cristalino</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -7,4 +7,8 @@
     <string name="cocktailimage">cocktailImage</string>
     <string name="tequila">Tequila</string>
     <string name="tequila_blanco_cristalino">Tequila blanco cristalino</string>
+    <string name="ing">Pour the Galliano liqueur over ice. Fill the remainder of the glass with ginger ale and thats all there is to it. You now have a your very own GG.</string>
+    <string name="cocacola">cocacola</string>
+    <string name="instructions">INSTRUCTIONS</string>
+    <string name="ingredients">INGREDIENTS</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/cocktailapp/viewmodel/CocktailsViewmodel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cocktailapp.viewmodel\n\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cocktailapp.data.network.CocktailRepositoryImp\nimport com.example.cocktailapp.model.CocktailModel\nimport com.example.cocktailapp.utils.UIState\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.CoroutineDispatcher\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass CocktailsViewModel @Inject constructor(private val coRepo: CocktailRepositoryImp) :\n    ViewModel() {\n\n\n    var instructions = \"\"\n    var ingredints = \"\"\n    var image = \"\"\n    private val ioDispatcher: CoroutineDispatcher = Dispatchers.IO\n    private val _drink: MutableLiveData<UIState<CocktailModel>> = MutableLiveData(UIState.LOADING)\n    val drink: MutableLiveData<UIState<CocktailModel>> get() = _drink\n\n\n\n    init {\n        getAllDrinks()\n    }\n\n\n    private fun getAllDrinks() {\n                viewModelScope.launch(ioDispatcher) {\n                    coRepo.getListCocktails().collect() {\n                        _drink.postValue(it)\n\n                        }\n                    }\n                }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cocktailapp/viewmodel/CocktailsViewmodel.kt b/app/src/main/java/com/example/cocktailapp/viewmodel/CocktailsViewmodel.kt
--- a/app/src/main/java/com/example/cocktailapp/viewmodel/CocktailsViewmodel.kt	
+++ b/app/src/main/java/com/example/cocktailapp/viewmodel/CocktailsViewmodel.kt	
@@ -18,7 +18,9 @@
 
 
     var instructions = ""
-    var ingredints = ""
+    var title = ""
+    var ingredient1 = ""
+    var ingredient2 = ""
     var image = ""
     private val ioDispatcher: CoroutineDispatcher = Dispatchers.IO
     private val _drink: MutableLiveData<UIState<CocktailModel>> = MutableLiveData(UIState.LOADING)
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"purple_200\">#FFBB86FC</color>\n    <color name=\"purple_500\">#FF6200EE</color>\n    <color name=\"purple_700\">#FF3700B3</color>\n    <color name=\"teal_200\">#FF03DAC5</color>\n    <color name=\"teal_700\">#FF018786</color>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	
+++ b/app/src/main/res/values/colors.xml	
@@ -4,7 +4,16 @@
     <color name="purple_500">#FF6200EE</color>
     <color name="purple_700">#FF3700B3</color>
     <color name="teal_200">#FF03DAC5</color>
+    <color name="BabyBlue">#BFD7ED</color>
+    <color name="BlueGrotto">#60A3D9</color>
+    <color name="RoyalBlue">#0074B7</color>
+    <color name="NavyBlue">#003B73</color>
     <color name="teal_700">#FF018786</color>
     <color name="black">#FF000000</color>
     <color name="white">#FFFFFFFF</color>
+    <color name="Lime_green">#18A558</color>
+    <color name="Orange">#ff9900</color>
+    <color name="Red">#FA3E3E</color>
+    <color name="gray">#E9E5E5</color>
+    <color name="brown">#736161</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.CocktailApp\" parent=\"Theme.MaterialComponents.DayNight.DarkActionBar\">\n        <!-- Primary brand color. -->\n        <item name=\"colorPrimary\">@color/purple_500</item>\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n        <item name=\"colorOnPrimary\">@color/white</item>\n        <!-- Secondary brand color. -->\n        <item name=\"colorSecondary\">@color/teal_200</item>\n        <item name=\"colorSecondaryVariant\">@color/teal_700</item>\n        <item name=\"colorOnSecondary\">@color/black</item>\n        <!-- Status bar color. -->\n        <item name=\"android:statusBarColor\">?attr/colorPrimaryVariant</item>\n        <!-- Customize your theme here. -->\n    </style>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	
+++ b/app/src/main/res/values/themes.xml	
@@ -2,7 +2,7 @@
     <!-- Base application theme. -->
     <style name="Theme.CocktailApp" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
         <!-- Primary brand color. -->
-        <item name="colorPrimary">@color/purple_500</item>
+        <item name="colorPrimary">@color/Red</item>
         <item name="colorPrimaryVariant">@color/purple_700</item>
         <item name="colorOnPrimary">@color/white</item>
         <!-- Secondary brand color. -->
@@ -10,7 +10,7 @@
         <item name="colorSecondaryVariant">@color/teal_700</item>
         <item name="colorOnSecondary">@color/black</item>
         <!-- Status bar color. -->
-        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
+        <item name="android:statusBarColor">@color/Red</item>
         <!-- Customize your theme here. -->
     </style>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/cocktailapp/view/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cocktailapp.view\n\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport com.example.cocktailapp.R\nimport com.example.cocktailapp.databinding.ActivityMainBinding\nimport dagger.hilt.android.AndroidEntryPoint\n\n@AndroidEntryPoint\nclass MainActivity : AppCompatActivity() {\n\n    private val binding: ActivityMainBinding by lazy {\n        ActivityMainBinding.inflate(layoutInflater)\n    }\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(binding.root)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cocktailapp/view/MainActivity.kt b/app/src/main/java/com/example/cocktailapp/view/MainActivity.kt
--- a/app/src/main/java/com/example/cocktailapp/view/MainActivity.kt	
+++ b/app/src/main/java/com/example/cocktailapp/view/MainActivity.kt	
@@ -2,6 +2,9 @@
 
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
+import androidx.navigation.findNavController
+import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.ui.setupActionBarWithNavController
 import com.example.cocktailapp.R
 import com.example.cocktailapp.databinding.ActivityMainBinding
 import dagger.hilt.android.AndroidEntryPoint
@@ -17,5 +20,17 @@
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(binding.root)
+
+        val navHost =
+            supportFragmentManager.findFragmentById(R.id.frag_container) as NavHostFragment
+        setupActionBarWithNavController(navHost.navController)
+
+
+    }
+
+    //Navigate between fragment with the arrow
+    override fun onSupportNavigateUp(): Boolean {
+        val navController = findNavController(R.id.frag_container)
+        return navController.navigateUp() || super.onSupportNavigateUp()
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".view.MainActivity\">\n\n    <androidx.fragment.app.FragmentContainerView\n        android:id=\"@+id/frag_container\"\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:defaultNavHost=\"true\"\n        android:layout_margin=\"10dp\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toTopOf=\"@+id/bottomNavigationView\"\n        app:navGraph=\"@navigation/bottom_navigation\" />\n\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:id=\"@+id/bottomNavigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:menu=\"@menu/bottom_menu\" />\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -4,7 +4,8 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".view.MainActivity">
+    tools:context=".view.MainActivity"
+    >
 
     <androidx.fragment.app.FragmentContainerView
         android:id="@+id/frag_container"
